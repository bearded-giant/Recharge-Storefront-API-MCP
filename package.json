{
  "name": "recharge-storefront-api-mcp",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "description": "Recharge Storefront API MCP Server",
  "main": "index.js",
  "bin": {
    "recharge-storefront-api-mcp": "index.js"
  },
  "scripts": {
    "start": "node src/server.js",
    "dev": "node --watch src/server.js",
    "dev:debug": "DEBUG=true node --watch src/server.js",
    "build": "echo 'Build complete - no compilation needed for Node.js project'",
    "coverage": "node scripts/coverage.js",
    "setup": "chmod +x scripts/setup.sh && ./scripts/setup.sh",
    "test": "npm run lint && npm run validate && npm run test:api-keys",
    "test:full": "chmod +x scripts/test.sh && ./scripts/test.sh",
    "lint": "node -e \"const fs = require('fs'); const path = require('path'); function checkFiles(dir) { if (!fs.existsSync(dir)) return; const files = fs.readdirSync(dir, { withFileTypes: true }); for (const file of files) { const fullPath = path.join(dir, file.name); if (file.isDirectory()) { checkFiles(fullPath); } else if (file.name.endsWith('.js')) { try { require('child_process').execSync('node --check \\\"' + fullPath + '\\\"', { stdio: 'inherit' }); } catch (e) { console.error('Syntax error in:', fullPath); process.exit(1); } } } } checkFiles('src'); checkFiles('scripts');\" && echo '✅ Lint check passed'",
    "validate": "npm run lint && node -c src/server.js && echo \"✅ Syntax validation passed\" && npm run coverage",
    "debug": "DEBUG=true node src/server.js",
    "clean": "rm -rf node_modules package-lock.json && npm install",
    "health": "node -e \"console.log('✅ Server health check passed'); console.log('📊 Node.js version:', process.version); console.log('🖥️  Platform:', process.platform); console.log('📦 Dependencies:', Object.keys(require('./package.json').dependencies).length);\"",
    "version": "node -p \"require('./package.json').version\"",
    "mcp:test": "echo '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"tools/list\",\"params\":{}}' | npm start",
    "test:api-keys": "node scripts/test-api-key-logic.js"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "recharge",
    "subscription",
    "ecommerce",
    "api",
    "storefront",
    "shopify",
    "recurring-billing",
    "subscription-management",
    "customer-portal"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "latest",
    "axios": "latest",
    "dotenv": "latest",
    "zod": "latest",
    "zod-to-json-schema": "^3.24.6"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/recharge-storefront-api-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/recharge-storefront-api-mcp/issues"
  },
  "homepage": "https://github.com/your-username/recharge-storefront-api-mcp#readme"
}
